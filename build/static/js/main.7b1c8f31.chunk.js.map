{"version":3,"sources":["BooksAPI.js","SearchBooks.js","Read.js","ListBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","get","bookId","fetch","concat","then","res","json","data","book","update","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","books","SearchBooks","state","handelQuery","e","target","value","BooksAPI","_this","setState","error","onSelectChange","b","props","onShelfChange","getShelf","index","findIndex","x","_this2","this","react_default","a","createElement","className","react_router_dom","to","lib","minLength","debounceTimeout","type","placeholder","onChange","map","key","style","imageLinks","width","height","backgroundImage","thumbnail","defaultValue","disabled","title","authors","author","Component","Read","readBooks","filter","mode","ListBooks","src_Read","BooksApp","currentState","push","_this3","react_router","exact","path","render","src_SearchBooks","src_ListBooks","React","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7b1c8f31.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport {DebounceInput} from 'react-debounce-input';\r\n\r\nclass SearchBooks extends Component{\r\n  state = {\r\n    books:[]\r\n  }\r\n  handelQuery = (e)=>{\r\n    const query = e.target.value\r\n    BooksAPI.search(query).then(\r\n      (books) => {\r\n        //console.log(books)\r\n        this.setState(\r\n          ()=>{\r\n            if(!books || (books && books.error))\r\n              books = []\r\n            return {books}\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n  \r\n  onSelectChange = (e, book)=>{\r\n    const shelf = e.target.value\r\n    //console.log(shelf)\r\n    BooksAPI.get(book.id).then(b=>{\r\n      this.props.onShelfChange(b, shelf)\r\n    })\r\n  }\r\n  getShelf = (book)=>{\r\n    const index = this.props.books.findIndex(x => x.id === book.id)\r\n    if(index===-1) return \"none\"\r\n    return this.props.books[index].shelf\r\n  }\r\n    render(){\r\n      //console.log(this.state.books[0])\r\n        return (\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link to=\"/\" className=\"close-search\">Close</Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n                <DebounceInput minLength={2} debounceTimeout={300} type=\"text\" placeholder=\"Search by title or author\" onChange={this.handelQuery} />\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n              {\r\n                this.state.books.map((book)=>(\r\n                  <li key={book.id}>\r\n                    <div className=\"book\">\r\n                      <div className=\"book-top\">\r\n                        <div className=\"book-cover\" style={book.imageLinks&&{width: 128, height: 192, backgroundImage: `url(${book.imageLinks.thumbnail})`}}></div>\r\n                        <div className=\"book-shelf-changer\">\r\n                          <select onChange={e=>this.onSelectChange(e, book)} defaultValue={this.getShelf(book)}>\r\n                            <option value=\"move\" disabled>Move to...</option>\r\n                            <option value=\"currentlyReading\">Currently Reading</option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">None</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"book-title\">{book.title}</div>\r\n                      <div className=\"book-authors\">\r\n                         {\r\n                         book.authors && book.authors.map((author)=>(\r\n                            <div key={book.id+author}>\r\n                              {author}\r\n                            </div>\r\n                            ))\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                  \r\n                ))}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBooks","import React, {Component} from 'react';\r\nclass Read extends Component{\r\n    onSelectChange = (e, book)=>{\r\n      const shelf = e.target.value\r\n      this.props.onShelfChange(book, shelf)\r\n    }\r\n    render(){\r\n      const readBooks = this.props.books.filter((book)=>book.shelf===this.props.mode)\r\n        return (\r\n        <div className=\"bookshelf\">\r\n          <h2 className=\"bookshelf-title\">{this.props.title}</h2>\r\n          <div className=\"bookshelf-books\">\r\n            <ol className=\"books-grid\">\r\n              {\r\n                readBooks.map((book)=>(\r\n                  <li key={book.id}>\r\n                    <div className=\"book\">\r\n                      <div className=\"book-top\">\r\n                        <div className=\"book-cover\" style={{width: 128, height: 192, backgroundImage: `url(${book.imageLinks.thumbnail})`}}></div>\r\n                        <div className=\"book-shelf-changer\">\r\n                          <select defaultValue={book.shelf} onChange={e=>this.onSelectChange(e, book)}>\r\n                            <option value=\"move\" disabled>Move to...</option>\r\n                            <option value=\"currentlyReading\">Currently Reading</option>\r\n                            <option value=\"wantToRead\">Want to Read</option>\r\n                            <option value=\"read\">Read</option>\r\n                            <option value=\"none\">None</option>\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"book-title\">{book.title}</div>\r\n                      <div className=\"book-authors\">\r\n                        {\r\n                          book.authors.map((author)=>(\r\n                            <div key={book.id+author}>\r\n                              {author}\r\n                            </div>\r\n                            ))\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                  \r\n                ))}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n    )}\r\n}\r\n\r\nexport default Read","import React, {Component} from 'react';\r\nimport Read from './Read';\r\nimport {Link} from 'react-router-dom';\r\nclass ListBooks extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <div> \r\n                <Read books={this.props.books} mode=\"currentlyReading\" title=\"Currently Reading\" onShelfChange={this.props.onShelfChange}/>\r\n                <Read  books={this.props.books} mode=\"wantToRead\" title=\"Want to Read\" onShelfChange={this.props.onShelfChange}/>\r\n                <Read  books={this.props.books} mode=\"read\" title=\"Read\" onShelfChange={this.props.onShelfChange}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"open-search\">\r\n                <Link to=\"/search\"><button>Add a book</button></Link>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListBooks;","import React from 'react'\r\n// import * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport SearchBooks from './SearchBooks'\r\nimport ListBooks from './ListBooks'\r\nimport {Route} from 'react-router-dom'\r\nimport * as BooksAPI from './BooksAPI';\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    books: []\r\n  }\r\n\r\n  onShelfChange = (book, shelf)=>{\r\n    BooksAPI.update(book, shelf)\r\n    book.shelf = shelf\r\n    this.setState(\r\n      (currentState)=>{\r\n        const index = currentState.books.findIndex(x => x.id === book.id)\r\n        if(index===-1 && shelf!==\"none\")\r\n          currentState.books.push(book)\r\n        else\r\n          currentState.books[index]=book\r\n        return currentState\r\n      }\r\n    )\r\n  }\r\n\r\n  componentDidMount(){\r\n    BooksAPI.getAll().then(\r\n      (books) => {\r\n        this.setState(\r\n          ()=>({\r\n            books\r\n          })\r\n        )\r\n      }\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n          <Route exact path=\"/search\" render={()=>(\r\n            <SearchBooks books={this.state.books} onShelfChange={this.onShelfChange}/>\r\n          )}/>\r\n          <Route exact path=\"/\" render={()=>(\r\n            <ListBooks books={this.state.books} onShelfChange={this.onShelfChange}/>\r\n          )}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport {BrowserRouter} from 'react-router-dom';\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n     document.getElementById('root'))\r\n"],"sourceRoot":""}